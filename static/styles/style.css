/* @include css-gradient(#dfdfdf,#f8f8f8); */
/* @include box-sizing(border-box); */
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -khtml-box-sizing: border-box;
  box-sizing: border-box; }

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after {
  content: '';
  content: none; }

q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
body {
  margin: 0px;
  background: #000;
  color: #fff; }

.board {
  width: 1000px;
  min-width: 1000px;
  height: 576px;
  background: url('/static/images/board.jpg') no-repeat;
  background-size: 100% auto;
  position: relative; }
  .board .ball {
    position: absolute;
    background-image: url(/static/images/sprite.png);
    background-position: -112px -57px;
    width: 55px;
    height: 55px;
    margin: 326px 0 0 472px; }
  .board #my-racket {
    background-image: url(/static/images/sprite.png);
    background-position: 0px 0px;
    width: 112px;
    height: 192px;
    position: absolute;
    top: 342px;
    left: 456px; }
  .board #opponent-racket {
    background-image: url(/static/images/sprite.png);
    background-position: -112px 0px;
    width: 34px;
    height: 57px;
    position: absolute;
    top: 168px;
    left: 488px; }
  .board .boundaries {
    position: absolute;
    border: 1px solid red;
    width: 100%;
    height: 200px;
    margin-top: 229px; }
